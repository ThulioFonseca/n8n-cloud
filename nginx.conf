upstream n8n_backend {
    server n8n-app:5678;
    keepalive 32;
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=n8n_limit:10m rate=10r/s;

server {
    listen 80;
    server_name _;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Performance settings
    client_max_body_size 50M;
    keepalive_timeout 65;
    
    # Rate limiting
    limit_req zone=n8n_limit burst=20 nodelay;
    
    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "healthy";
        add_header Content-Type text/plain;
    }

    # Root redirect
    location = / {
        return 301 /n8n/;
    }

    # N8N redirect
    location = /n8n {
        return 301 /n8n/;
    }

    # N8N application
    location /n8n/ {
        proxy_pass http://n8n_backend/;
        
        # Essential headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Performance tuning
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_buffering off;
        proxy_redirect off;
    }

    # Webhook endpoint
    location /webhook/ {
        proxy_pass http://n8n_backend/webhook/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # Block unnecessary requests
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# WebSocket connection upgrade
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}