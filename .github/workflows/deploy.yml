name: Deploy n8n cloud

on:
  push:
    branches:
      - main  # disparar deploy apenas no branch main

jobs:
  deploy:
    name: Deploy to VM
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do c√≥digo
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2. Configurar SSH para acessar a VM
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VM_SSH_KEY }}

      # 3. Copiar os arquivos do repo para a VM (sem sobrescrever o .env)
      - name: Sync repo to VM
        run: |
          rsync -avz --delete \
            --exclude '*_data/' \
            --exclude '.env' \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:~/n8n-cloud/

      # 4. Subir stack docker na VM
      - name: Deploy stack on VM
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "
            cd ~/n8n-cloud &&
            docker compose pull &&
            docker compose --env-file .env up -d
          "
      - name: Check container logs
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "
            cd ~/n8n-cloud &&
            echo '=== NGINX LOGS ===' &&
            docker logs nginx --tail 20 &&
            echo '=== N8N LOGS ===' &&
            docker logs n8n --tail 20 &&
            echo '=== CONTAINER STATUS ===' &&
            docker ps
          "
      - name: Debug containers
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "
            cd ~/n8n-cloud &&
            echo '=== CLEANING OLD CONTAINERS ===' &&
            docker compose down &&
            docker system prune -f &&
            echo '=== STARTING FRESH ===' &&
            docker compose --env-file .env up -d &&
            sleep 30 &&
            echo '=== CONTAINER STATUS ===' &&
            docker ps -a &&
            echo '=== N8N LOGS ===' &&
            docker logs n8n --tail 50 &&
            echo '=== TESTING DIRECT ACCESS ===' &&
            curl -I http://localhost:5678/ || echo 'N8N not responding' &&
            curl -I http://localhost:3000/ || echo 'Grafana not responding' &&
            curl -I http://localhost:9000/ || echo 'Portainer not responding'
          "
