networks:
  app-net:
    driver: bridge

services:
  # Nginx reverso manual
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - n8n
      - grafana
      - portainer
    networks:
      - app-net

  # N8N - Configuração simplificada
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    environment:
      - N8N_HOST=${DOMAIN}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://${DOMAIN}/n8n/
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - TZ=America/Sao_Paulo
    ports:
      - "5678:5678"  # Expor temporariamente para debug
    volumes:
      - ./n8n_data:/home/node/.n8n
    networks:
      - app-net

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    environment:
      - GF_SERVER_ROOT_URL=http://${DOMAIN}/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    ports:
      - "3000:3000"  # Expor temporariamente para debug
    volumes:
      - ./grafana_data:/var/lib/grafana
    networks:
      - app-net

  # Portainer
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    command: --base-url=/portainer
    ports:
      - "9000:9000"  # Expor temporariamente para debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data
    networks:
      - app-net